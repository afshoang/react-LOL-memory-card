{"version":3,"sources":["components/Card.js","components/Navbar.js","champions.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","champion","handleClick","className","onClick","src","process","image","alt","charAt","toUpperCase","slice","Navbar","score","bestScore","id","champions","clicked","App","useState","setScore","setBestScore","listChampions","setListChampions","gameReset","map","console","log","length","changedChampions","cham","arr","i","j","Math","floor","random","shuffelChampions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de67f8c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ champion, handleClick }) => {\r\n  // Capialize first letter of champions\r\n  function captalize(name) {\r\n    return name.charAt(0).toUpperCase() + name.slice(1);\r\n  }\r\n\r\n  return (\r\n    <div className='column' onClick={() => handleClick(champion)}>\r\n      <div className='ui fluid card'>\r\n        <div className='image'>\r\n          <img\r\n            src={process.env.PUBLIC_URL + champion.image}\r\n            alt={champion.name}\r\n          />\r\n        </div>\r\n        <div className='content ui'>\r\n          <span className='header'>{captalize(champion.name)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst Navbar = ({ score, bestScore }) => {\r\n  return (\r\n    <div className='ui centered grid'>\r\n      <h2 className='ui icon centered header'>\r\n        <img\r\n          src={process.env.PUBLIC_URL + '/images/logo.png'}\r\n          id='header-img'\r\n          alt='logo'\r\n        />\r\n        <div className='content'>Memory Game</div>\r\n\r\n        <p>Hướng dẫn: Tích điểm bằng cách chọn 1 tướng 1 lần duy nhất</p>\r\n\r\n        <div className='score'>\r\n          <span>Score: {score}</span>\r\n          <span>Best Score: {bestScore}</span>\r\n        </div>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const champions = [\r\n  {\r\n    id: 1,\r\n    name: 'zed',\r\n    image: '/images/zed.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'thresh',\r\n    image: '/images/thresh.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'ryze',\r\n    image: '/images/ryze.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'rumble',\r\n    image: '/images/rumble.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'mordekaiser',\r\n    image: '/images/mordekaiser.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'lux',\r\n    image: '/images/lux.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'lucian',\r\n    image: '/images/lucian.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'jinx',\r\n    image: '/images/jinx.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'jhin',\r\n    image: '/images/jhin.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'garen',\r\n    image: '/images/garen.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'fiora',\r\n    image: '/images/fiora.jpg',\r\n    clicked: false,\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'yasuo',\r\n    image: '/images/yasuo.jpg',\r\n    clicked: false,\r\n  },\r\n];\r\n\r\nexport default champions;\r\n","import { useState, useEffect } from 'react';\nimport Card from './components/Card';\nimport Navbar from './components/Navbar';\nimport champions from './champions.js';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [listChampions, setListChampions] = useState(champions);\n\n  function shuffelChampions(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  function gameReset() {\n    if (score > bestScore) {\n      setBestScore(score);\n    }\n    setScore(0);\n\n    setListChampions(() => {\n      // reset initial champios\n      listChampions.map((champion) => {\n        if (champion.clicked) {\n          champion.clicked = false;\n        }\n        return champion;\n      });\n    });\n  }\n\n  function handleClick(champion) {\n    console.log(champion.name);\n    // if max score\n    if (score === listChampions.length) {\n      gameReset();\n    }\n    const changedChampions = listChampions.map((cham) => {\n      if (cham.id === champion.id) {\n        // game over\n        if (cham.clicked) {\n          if (score > bestScore) {\n            setBestScore(score);\n          }\n          gameReset();\n        } else {\n          cham.clicked = true;\n          setScore(() => score + 1);\n        }\n      }\n      return cham;\n    });\n    setListChampions(changedChampions);\n  }\n\n  return (\n    <>\n      <Navbar score={score} bestScore={bestScore} />\n      <div className='container ui six column grid'>\n        {shuffelChampions(listChampions).map((champion) => {\n          return (\n            <Card\n              champion={champion}\n              handleClick={handleClick}\n              key={champion.name}\n            />\n          );\n        })}\n      </div>\n      <button onClick={handleClick}></button>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}